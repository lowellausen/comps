   0  $accept : program $end

   1  program : code

   2  code : var code
   3       | func code
   4       | error
   5       |

   6  var : var_type TK_IDENTIFIER '=' LIT_INTEGER ';'
   7      | var_type TK_IDENTIFIER '=' LIT_REAL ';'
   8      | var_type TK_IDENTIFIER '=' LIT_CHAR ';'
   9      | var_type '#' TK_IDENTIFIER '=' LIT_CHAR ';'
  10      | var_type '#' TK_IDENTIFIER '=' LIT_REAL ';'
  11      | var_type '#' TK_IDENTIFIER '=' LIT_INTEGER ';'
  12      | var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ';'
  13      | var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list ';'

  14  var_type : TK_CHAR
  15           | TK_FLOAT
  16           | TK_INT

  17  lit : LIT_INTEGER
  18      | LIT_REAL
  19      | LIT_CHAR

  20  lit_list : lit lit_list
  21           |

  22  $$1 :

  23  func : var_type TK_IDENTIFIER '(' $$1 param_list ')' block

  24  param : var_type TK_IDENTIFIER
  25        | var_type '#' TK_IDENTIFIER

  26  $$2 :

  27  param_list : param $$2 aux_param_list
  28             |

  29  $$3 :

  30  aux_param_list : ',' param $$3 aux_param_list
  31                 |

  32  block : '{' command_list '}'

  33  command_list : command ';' command_list
  34               | command

  35  command : attribution
  36          | read
  37          | print
  38          | return
  39          | block
  40          | control
  41          |

  42  attribution : TK_IDENTIFIER '=' expr
  43              | TK_IDENTIFIER '[' expr ']' '=' expr

  44  read : TK_READ TK_IDENTIFIER

  45  print : TK_PRINT print_list

  46  print_list : LIT_STRING
  47             | expr
  48             | LIT_STRING print_list
  49             | expr print_list

  50  return : TK_RETURN expr

  51  expr : TK_IDENTIFIER
  52       | TK_IDENTIFIER '[' expr ']'
  53       | lit
  54       | func_call
  55       | '#' TK_IDENTIFIER
  56       | '&' TK_IDENTIFIER
  57       | '(' expr ')'
  58       | expr '+' expr
  59       | expr '-' expr
  60       | expr '*' expr
  61       | expr '/' expr
  62       | expr '<' expr
  63       | expr '>' expr
  64       | '!' expr
  65       | expr OPERATOR_LE expr
  66       | expr OPERATOR_GE expr
  67       | expr OPERATOR_EQ expr
  68       | expr OPERATOR_NE expr
  69       | expr OPERATOR_AND expr
  70       | expr OPERATOR_OR expr

  71  $$4 :

  72  func_call : TK_IDENTIFIER '(' $$4 call_param_list ')'
  73            | TK_IDENTIFIER '(' ')'

  74  call_param_list : expr
  75                  | expr ',' call_param_list

  76  control : if
  77          | while
  78          | for

  79  if : TK_IF '(' expr ')' TK_THEN command
  80     | TK_IF '(' expr ')' TK_THEN command TK_ELSE command

  81  while : TK_WHILE '(' expr ')' command

  82  for : TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr ')' command

state 0
	$accept : . program $end  (0)
	code : .  (5)

	error  shift 1
	TK_CHAR  shift 2
	TK_INT  shift 3
	TK_FLOAT  shift 4
	$end  reduce 5

	program  goto 5
	code  goto 6
	var  goto 7
	var_type  goto 8
	func  goto 9


state 1
	code : error .  (4)

	.  reduce 4


state 2
	var_type : TK_CHAR .  (14)

	.  reduce 14


state 3
	var_type : TK_INT .  (16)

	.  reduce 16


state 4
	var_type : TK_FLOAT .  (15)

	.  reduce 15


state 5
	$accept : program . $end  (0)

	$end  accept


state 6
	program : code .  (1)

	.  reduce 1


state 7
	code : var . code  (2)
	code : .  (5)

	error  shift 1
	TK_CHAR  shift 2
	TK_INT  shift 3
	TK_FLOAT  shift 4
	$end  reduce 5

	code  goto 10
	var  goto 7
	var_type  goto 8
	func  goto 9


state 8
	var : var_type . TK_IDENTIFIER '=' LIT_INTEGER ';'  (6)
	var : var_type . TK_IDENTIFIER '=' LIT_REAL ';'  (7)
	var : var_type . TK_IDENTIFIER '=' LIT_CHAR ';'  (8)
	var : var_type . '#' TK_IDENTIFIER '=' LIT_CHAR ';'  (9)
	var : var_type . '#' TK_IDENTIFIER '=' LIT_REAL ';'  (10)
	var : var_type . '#' TK_IDENTIFIER '=' LIT_INTEGER ';'  (11)
	var : var_type . TK_IDENTIFIER '[' LIT_INTEGER ']' ';'  (12)
	var : var_type . TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list ';'  (13)
	func : var_type . TK_IDENTIFIER '(' $$1 param_list ')' block  (23)

	TK_IDENTIFIER  shift 11
	'#'  shift 12
	.  error


state 9
	code : func . code  (3)
	code : .  (5)

	error  shift 1
	TK_CHAR  shift 2
	TK_INT  shift 3
	TK_FLOAT  shift 4
	$end  reduce 5

	code  goto 13
	var  goto 7
	var_type  goto 8
	func  goto 9


state 10
	code : var code .  (2)

	.  reduce 2


state 11
	var : var_type TK_IDENTIFIER . '=' LIT_INTEGER ';'  (6)
	var : var_type TK_IDENTIFIER . '=' LIT_REAL ';'  (7)
	var : var_type TK_IDENTIFIER . '=' LIT_CHAR ';'  (8)
	var : var_type TK_IDENTIFIER . '[' LIT_INTEGER ']' ';'  (12)
	var : var_type TK_IDENTIFIER . '[' LIT_INTEGER ']' ':' lit_list ';'  (13)
	func : var_type TK_IDENTIFIER . '(' $$1 param_list ')' block  (23)

	'='  shift 14
	'['  shift 15
	'('  shift 16
	.  error


state 12
	var : var_type '#' . TK_IDENTIFIER '=' LIT_CHAR ';'  (9)
	var : var_type '#' . TK_IDENTIFIER '=' LIT_REAL ';'  (10)
	var : var_type '#' . TK_IDENTIFIER '=' LIT_INTEGER ';'  (11)

	TK_IDENTIFIER  shift 17
	.  error


state 13
	code : func code .  (3)

	.  reduce 3


state 14
	var : var_type TK_IDENTIFIER '=' . LIT_INTEGER ';'  (6)
	var : var_type TK_IDENTIFIER '=' . LIT_REAL ';'  (7)
	var : var_type TK_IDENTIFIER '=' . LIT_CHAR ';'  (8)

	LIT_INTEGER  shift 18
	LIT_REAL  shift 19
	LIT_CHAR  shift 20
	.  error


state 15
	var : var_type TK_IDENTIFIER '[' . LIT_INTEGER ']' ';'  (12)
	var : var_type TK_IDENTIFIER '[' . LIT_INTEGER ']' ':' lit_list ';'  (13)

	LIT_INTEGER  shift 21
	.  error


state 16
	func : var_type TK_IDENTIFIER '(' . $$1 param_list ')' block  (23)
	$$1 : .  (22)

	.  reduce 22

	$$1  goto 22


state 17
	var : var_type '#' TK_IDENTIFIER . '=' LIT_CHAR ';'  (9)
	var : var_type '#' TK_IDENTIFIER . '=' LIT_REAL ';'  (10)
	var : var_type '#' TK_IDENTIFIER . '=' LIT_INTEGER ';'  (11)

	'='  shift 23
	.  error


state 18
	var : var_type TK_IDENTIFIER '=' LIT_INTEGER . ';'  (6)

	';'  shift 24
	.  error


state 19
	var : var_type TK_IDENTIFIER '=' LIT_REAL . ';'  (7)

	';'  shift 25
	.  error


state 20
	var : var_type TK_IDENTIFIER '=' LIT_CHAR . ';'  (8)

	';'  shift 26
	.  error


state 21
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER . ']' ';'  (12)
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER . ']' ':' lit_list ';'  (13)

	']'  shift 27
	.  error


state 22
	func : var_type TK_IDENTIFIER '(' $$1 . param_list ')' block  (23)
	param_list : .  (28)

	TK_CHAR  shift 2
	TK_INT  shift 3
	TK_FLOAT  shift 4
	')'  reduce 28

	var_type  goto 28
	param  goto 29
	param_list  goto 30


state 23
	var : var_type '#' TK_IDENTIFIER '=' . LIT_CHAR ';'  (9)
	var : var_type '#' TK_IDENTIFIER '=' . LIT_REAL ';'  (10)
	var : var_type '#' TK_IDENTIFIER '=' . LIT_INTEGER ';'  (11)

	LIT_INTEGER  shift 31
	LIT_REAL  shift 32
	LIT_CHAR  shift 33
	.  error


state 24
	var : var_type TK_IDENTIFIER '=' LIT_INTEGER ';' .  (6)

	.  reduce 6


state 25
	var : var_type TK_IDENTIFIER '=' LIT_REAL ';' .  (7)

	.  reduce 7


state 26
	var : var_type TK_IDENTIFIER '=' LIT_CHAR ';' .  (8)

	.  reduce 8


state 27
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER ']' . ';'  (12)
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER ']' . ':' lit_list ';'  (13)

	';'  shift 34
	':'  shift 35
	.  error


state 28
	param : var_type . TK_IDENTIFIER  (24)
	param : var_type . '#' TK_IDENTIFIER  (25)

	TK_IDENTIFIER  shift 36
	'#'  shift 37
	.  error


state 29
	param_list : param . $$2 aux_param_list  (27)
	$$2 : .  (26)

	.  reduce 26

	$$2  goto 38


state 30
	func : var_type TK_IDENTIFIER '(' $$1 param_list . ')' block  (23)

	')'  shift 39
	.  error


state 31
	var : var_type '#' TK_IDENTIFIER '=' LIT_INTEGER . ';'  (11)

	';'  shift 40
	.  error


state 32
	var : var_type '#' TK_IDENTIFIER '=' LIT_REAL . ';'  (10)

	';'  shift 41
	.  error


state 33
	var : var_type '#' TK_IDENTIFIER '=' LIT_CHAR . ';'  (9)

	';'  shift 42
	.  error


state 34
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ';' .  (12)

	.  reduce 12


state 35
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' . lit_list ';'  (13)
	lit_list : .  (21)

	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	';'  reduce 21

	lit  goto 46
	lit_list  goto 47


state 36
	param : var_type TK_IDENTIFIER .  (24)

	.  reduce 24


state 37
	param : var_type '#' . TK_IDENTIFIER  (25)

	TK_IDENTIFIER  shift 48
	.  error


state 38
	param_list : param $$2 . aux_param_list  (27)
	aux_param_list : .  (31)

	','  shift 49
	')'  reduce 31

	aux_param_list  goto 50


state 39
	func : var_type TK_IDENTIFIER '(' $$1 param_list ')' . block  (23)

	'{'  shift 51
	.  error

	block  goto 52


state 40
	var : var_type '#' TK_IDENTIFIER '=' LIT_INTEGER ';' .  (11)

	.  reduce 11


state 41
	var : var_type '#' TK_IDENTIFIER '=' LIT_REAL ';' .  (10)

	.  reduce 10


state 42
	var : var_type '#' TK_IDENTIFIER '=' LIT_CHAR ';' .  (9)

	.  reduce 9


state 43
	lit : LIT_INTEGER .  (17)

	.  reduce 17


state 44
	lit : LIT_REAL .  (18)

	.  reduce 18


state 45
	lit : LIT_CHAR .  (19)

	.  reduce 19


state 46
	lit_list : lit . lit_list  (20)
	lit_list : .  (21)

	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	';'  reduce 21

	lit  goto 46
	lit_list  goto 53


state 47
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list . ';'  (13)

	';'  shift 54
	.  error


state 48
	param : var_type '#' TK_IDENTIFIER .  (25)

	.  reduce 25


state 49
	aux_param_list : ',' . param $$3 aux_param_list  (30)

	TK_CHAR  shift 2
	TK_INT  shift 3
	TK_FLOAT  shift 4
	.  error

	var_type  goto 28
	param  goto 55


state 50
	param_list : param $$2 aux_param_list .  (27)

	.  reduce 27


state 51
	block : '{' . command_list '}'  (32)
	command : .  (41)

	TK_WHILE  shift 56
	TK_IF  shift 57
	TK_FOR  shift 58
	TK_READ  shift 59
	TK_RETURN  shift 60
	TK_PRINT  shift 61
	TK_IDENTIFIER  shift 62
	'{'  shift 51
	';'  reduce 41
	'}'  reduce 41

	block  goto 63
	command_list  goto 64
	command  goto 65
	attribution  goto 66
	read  goto 67
	print  goto 68
	return  goto 69
	control  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 52
	func : var_type TK_IDENTIFIER '(' $$1 param_list ')' block .  (23)

	.  reduce 23


state 53
	lit_list : lit lit_list .  (20)

	.  reduce 20


state 54
	var : var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list ';' .  (13)

	.  reduce 13


state 55
	aux_param_list : ',' param . $$3 aux_param_list  (30)
	$$3 : .  (29)

	.  reduce 29

	$$3  goto 74


state 56
	while : TK_WHILE . '(' expr ')' command  (81)

	'('  shift 75
	.  error


state 57
	if : TK_IF . '(' expr ')' TK_THEN command  (79)
	if : TK_IF . '(' expr ')' TK_THEN command TK_ELSE command  (80)

	'('  shift 76
	.  error


state 58
	for : TK_FOR . '(' TK_IDENTIFIER '=' expr TK_TO expr ')' command  (82)

	'('  shift 77
	.  error


state 59
	read : TK_READ . TK_IDENTIFIER  (44)

	TK_IDENTIFIER  shift 78
	.  error


state 60
	return : TK_RETURN . expr  (50)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 85
	func_call  goto 86


state 61
	print : TK_PRINT . print_list  (45)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	LIT_STRING  shift 87
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	print_list  goto 88
	expr  goto 89
	func_call  goto 86


state 62
	attribution : TK_IDENTIFIER . '=' expr  (42)
	attribution : TK_IDENTIFIER . '[' expr ']' '=' expr  (43)

	'='  shift 90
	'['  shift 91
	.  error


state 63
	command : block .  (39)

	.  reduce 39


state 64
	block : '{' command_list . '}'  (32)

	'}'  shift 92
	.  error


state 65
	command_list : command . ';' command_list  (33)
	command_list : command .  (34)

	';'  shift 93
	'}'  reduce 34


state 66
	command : attribution .  (35)

	.  reduce 35


state 67
	command : read .  (36)

	.  reduce 36


state 68
	command : print .  (37)

	.  reduce 37


state 69
	command : return .  (38)

	.  reduce 38


state 70
	command : control .  (40)

	.  reduce 40


state 71
	control : if .  (76)

	.  reduce 76


state 72
	control : while .  (77)

	.  reduce 77


state 73
	control : for .  (78)

	.  reduce 78


state 74
	aux_param_list : ',' param $$3 . aux_param_list  (30)
	aux_param_list : .  (31)

	','  shift 49
	')'  reduce 31

	aux_param_list  goto 94


state 75
	while : TK_WHILE '(' . expr ')' command  (81)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 95
	func_call  goto 86


state 76
	if : TK_IF '(' . expr ')' TK_THEN command  (79)
	if : TK_IF '(' . expr ')' TK_THEN command TK_ELSE command  (80)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 96
	func_call  goto 86


state 77
	for : TK_FOR '(' . TK_IDENTIFIER '=' expr TK_TO expr ')' command  (82)

	TK_IDENTIFIER  shift 97
	.  error


state 78
	read : TK_READ TK_IDENTIFIER .  (44)

	.  reduce 44


79: shift/reduce conflict (shift 99, reduce 51) on '('
state 79
	expr : TK_IDENTIFIER .  (51)
	expr : TK_IDENTIFIER . '[' expr ']'  (52)
	func_call : TK_IDENTIFIER . '(' $$4 call_param_list ')'  (72)
	func_call : TK_IDENTIFIER . '(' ')'  (73)

	'['  shift 98
	'('  shift 99
	TK_ELSE  reduce 51
	TK_TO  reduce 51
	OPERATOR_LE  reduce 51
	OPERATOR_GE  reduce 51
	OPERATOR_EQ  reduce 51
	OPERATOR_NE  reduce 51
	OPERATOR_AND  reduce 51
	OPERATOR_OR  reduce 51
	TK_IDENTIFIER  reduce 51
	LIT_INTEGER  reduce 51
	LIT_REAL  reduce 51
	LIT_CHAR  reduce 51
	LIT_STRING  reduce 51
	'<'  reduce 51
	'>'  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	'*'  reduce 51
	'/'  reduce 51
	'#'  reduce 51
	'&'  reduce 51
	'!'  reduce 51
	';'  reduce 51
	']'  reduce 51
	')'  reduce 51
	','  reduce 51
	'}'  reduce 51


state 80
	expr : '#' . TK_IDENTIFIER  (55)

	TK_IDENTIFIER  shift 100
	.  error


state 81
	expr : '&' . TK_IDENTIFIER  (56)

	TK_IDENTIFIER  shift 101
	.  error


state 82
	expr : '!' . expr  (64)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 102
	func_call  goto 86


state 83
	expr : '(' . expr ')'  (57)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 103
	func_call  goto 86


state 84
	expr : lit .  (53)

	.  reduce 53


state 85
	return : TK_RETURN expr .  (50)
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 50
	';'  reduce 50
	'}'  reduce 50


state 86
	expr : func_call .  (54)

	.  reduce 54


state 87
	print_list : LIT_STRING .  (46)
	print_list : LIT_STRING . print_list  (48)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	LIT_STRING  shift 87
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	TK_ELSE  reduce 46
	';'  reduce 46
	'}'  reduce 46

	lit  goto 84
	print_list  goto 116
	expr  goto 89
	func_call  goto 86


state 88
	print : TK_PRINT print_list .  (45)

	.  reduce 45


state 89
	print_list : expr .  (47)
	print_list : expr . print_list  (49)
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	LIT_STRING  shift 87
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	TK_ELSE  reduce 47
	';'  reduce 47
	'}'  reduce 47

	lit  goto 84
	print_list  goto 117
	expr  goto 89
	func_call  goto 86


state 90
	attribution : TK_IDENTIFIER '=' . expr  (42)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 118
	func_call  goto 86


state 91
	attribution : TK_IDENTIFIER '[' . expr ']' '=' expr  (43)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 119
	func_call  goto 86


state 92
	block : '{' command_list '}' .  (32)

	.  reduce 32


state 93
	command_list : command ';' . command_list  (33)
	command : .  (41)

	TK_WHILE  shift 56
	TK_IF  shift 57
	TK_FOR  shift 58
	TK_READ  shift 59
	TK_RETURN  shift 60
	TK_PRINT  shift 61
	TK_IDENTIFIER  shift 62
	'{'  shift 51
	';'  reduce 41
	'}'  reduce 41

	block  goto 63
	command_list  goto 120
	command  goto 65
	attribution  goto 66
	read  goto 67
	print  goto 68
	return  goto 69
	control  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 94
	aux_param_list : ',' param $$3 aux_param_list .  (30)

	.  reduce 30


state 95
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)
	while : TK_WHILE '(' expr . ')' command  (81)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	')'  shift 121
	.  error


state 96
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)
	if : TK_IF '(' expr . ')' TK_THEN command  (79)
	if : TK_IF '(' expr . ')' TK_THEN command TK_ELSE command  (80)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	')'  shift 122
	.  error


state 97
	for : TK_FOR '(' TK_IDENTIFIER . '=' expr TK_TO expr ')' command  (82)

	'='  shift 123
	.  error


state 98
	expr : TK_IDENTIFIER '[' . expr ']'  (52)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 124
	func_call  goto 86


state 99
	func_call : TK_IDENTIFIER '(' . $$4 call_param_list ')'  (72)
	func_call : TK_IDENTIFIER '(' . ')'  (73)
	$$4 : .  (71)

	')'  shift 125
	TK_IDENTIFIER  reduce 71
	LIT_INTEGER  reduce 71
	LIT_REAL  reduce 71
	LIT_CHAR  reduce 71
	'#'  reduce 71
	'&'  reduce 71
	'!'  reduce 71
	'('  reduce 71

	$$4  goto 126


state 100
	expr : '#' TK_IDENTIFIER .  (55)

	.  reduce 55


state 101
	expr : '&' TK_IDENTIFIER .  (56)

	.  reduce 56


state 102
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : '!' expr .  (64)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	.  reduce 64


state 103
	expr : '(' expr . ')'  (57)
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	')'  shift 127
	.  error


state 104
	expr : expr OPERATOR_LE . expr  (65)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 128
	func_call  goto 86


state 105
	expr : expr OPERATOR_GE . expr  (66)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 129
	func_call  goto 86


state 106
	expr : expr OPERATOR_EQ . expr  (67)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 130
	func_call  goto 86


state 107
	expr : expr OPERATOR_NE . expr  (68)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 131
	func_call  goto 86


state 108
	expr : expr OPERATOR_AND . expr  (69)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 132
	func_call  goto 86


state 109
	expr : expr OPERATOR_OR . expr  (70)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 133
	func_call  goto 86


state 110
	expr : expr '<' . expr  (62)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 134
	func_call  goto 86


state 111
	expr : expr '>' . expr  (63)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 135
	func_call  goto 86


state 112
	expr : expr '+' . expr  (58)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 136
	func_call  goto 86


state 113
	expr : expr '-' . expr  (59)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 137
	func_call  goto 86


state 114
	expr : expr '*' . expr  (60)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 138
	func_call  goto 86


state 115
	expr : expr '/' . expr  (61)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 139
	func_call  goto 86


state 116
	print_list : LIT_STRING print_list .  (48)

	.  reduce 48


state 117
	print_list : expr print_list .  (49)

	.  reduce 49


state 118
	attribution : TK_IDENTIFIER '=' expr .  (42)
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 42
	';'  reduce 42
	'}'  reduce 42


state 119
	attribution : TK_IDENTIFIER '[' expr . ']' '=' expr  (43)
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	']'  shift 140
	.  error


state 120
	command_list : command ';' command_list .  (33)

	.  reduce 33


state 121
	while : TK_WHILE '(' expr ')' . command  (81)
	command : .  (41)

	TK_WHILE  shift 56
	TK_IF  shift 57
	TK_FOR  shift 58
	TK_READ  shift 59
	TK_RETURN  shift 60
	TK_PRINT  shift 61
	TK_IDENTIFIER  shift 62
	'{'  shift 51
	TK_ELSE  reduce 41
	';'  reduce 41
	'}'  reduce 41

	block  goto 63
	command  goto 141
	attribution  goto 66
	read  goto 67
	print  goto 68
	return  goto 69
	control  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 122
	if : TK_IF '(' expr ')' . TK_THEN command  (79)
	if : TK_IF '(' expr ')' . TK_THEN command TK_ELSE command  (80)

	TK_THEN  shift 142
	.  error


state 123
	for : TK_FOR '(' TK_IDENTIFIER '=' . expr TK_TO expr ')' command  (82)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 143
	func_call  goto 86


state 124
	expr : TK_IDENTIFIER '[' expr . ']'  (52)
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	']'  shift 144
	.  error


state 125
	func_call : TK_IDENTIFIER '(' ')' .  (73)

	.  reduce 73


state 126
	func_call : TK_IDENTIFIER '(' $$4 . call_param_list ')'  (72)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 145
	func_call  goto 86
	call_param_list  goto 146


state 127
	expr : '(' expr ')' .  (57)

	.  reduce 57


state 128
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr OPERATOR_LE expr .  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 65
	TK_TO  reduce 65
	OPERATOR_LE  reduce 65
	OPERATOR_GE  reduce 65
	OPERATOR_EQ  reduce 65
	OPERATOR_NE  reduce 65
	OPERATOR_AND  reduce 65
	OPERATOR_OR  reduce 65
	TK_IDENTIFIER  reduce 65
	LIT_INTEGER  reduce 65
	LIT_REAL  reduce 65
	LIT_CHAR  reduce 65
	LIT_STRING  reduce 65
	'<'  reduce 65
	'>'  reduce 65
	'#'  reduce 65
	'&'  reduce 65
	'!'  reduce 65
	';'  reduce 65
	']'  reduce 65
	'('  reduce 65
	')'  reduce 65
	','  reduce 65
	'}'  reduce 65


state 129
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr OPERATOR_GE expr .  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 66
	TK_TO  reduce 66
	OPERATOR_LE  reduce 66
	OPERATOR_GE  reduce 66
	OPERATOR_EQ  reduce 66
	OPERATOR_NE  reduce 66
	OPERATOR_AND  reduce 66
	OPERATOR_OR  reduce 66
	TK_IDENTIFIER  reduce 66
	LIT_INTEGER  reduce 66
	LIT_REAL  reduce 66
	LIT_CHAR  reduce 66
	LIT_STRING  reduce 66
	'<'  reduce 66
	'>'  reduce 66
	'#'  reduce 66
	'&'  reduce 66
	'!'  reduce 66
	';'  reduce 66
	']'  reduce 66
	'('  reduce 66
	')'  reduce 66
	','  reduce 66
	'}'  reduce 66


state 130
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr OPERATOR_EQ expr .  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 67
	TK_TO  reduce 67
	OPERATOR_LE  reduce 67
	OPERATOR_GE  reduce 67
	OPERATOR_EQ  reduce 67
	OPERATOR_NE  reduce 67
	OPERATOR_AND  reduce 67
	OPERATOR_OR  reduce 67
	TK_IDENTIFIER  reduce 67
	LIT_INTEGER  reduce 67
	LIT_REAL  reduce 67
	LIT_CHAR  reduce 67
	LIT_STRING  reduce 67
	'<'  reduce 67
	'>'  reduce 67
	'#'  reduce 67
	'&'  reduce 67
	'!'  reduce 67
	';'  reduce 67
	']'  reduce 67
	'('  reduce 67
	')'  reduce 67
	','  reduce 67
	'}'  reduce 67


state 131
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr OPERATOR_NE expr .  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 68
	TK_TO  reduce 68
	OPERATOR_LE  reduce 68
	OPERATOR_GE  reduce 68
	OPERATOR_EQ  reduce 68
	OPERATOR_NE  reduce 68
	OPERATOR_AND  reduce 68
	OPERATOR_OR  reduce 68
	TK_IDENTIFIER  reduce 68
	LIT_INTEGER  reduce 68
	LIT_REAL  reduce 68
	LIT_CHAR  reduce 68
	LIT_STRING  reduce 68
	'<'  reduce 68
	'>'  reduce 68
	'#'  reduce 68
	'&'  reduce 68
	'!'  reduce 68
	';'  reduce 68
	']'  reduce 68
	'('  reduce 68
	')'  reduce 68
	','  reduce 68
	'}'  reduce 68


state 132
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr OPERATOR_AND expr .  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 69
	TK_TO  reduce 69
	OPERATOR_AND  reduce 69
	OPERATOR_OR  reduce 69
	TK_IDENTIFIER  reduce 69
	LIT_INTEGER  reduce 69
	LIT_REAL  reduce 69
	LIT_CHAR  reduce 69
	LIT_STRING  reduce 69
	'#'  reduce 69
	'&'  reduce 69
	'!'  reduce 69
	';'  reduce 69
	']'  reduce 69
	'('  reduce 69
	')'  reduce 69
	','  reduce 69
	'}'  reduce 69


state 133
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)
	expr : expr OPERATOR_OR expr .  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 70
	TK_TO  reduce 70
	OPERATOR_OR  reduce 70
	TK_IDENTIFIER  reduce 70
	LIT_INTEGER  reduce 70
	LIT_REAL  reduce 70
	LIT_CHAR  reduce 70
	LIT_STRING  reduce 70
	'#'  reduce 70
	'&'  reduce 70
	'!'  reduce 70
	';'  reduce 70
	']'  reduce 70
	'('  reduce 70
	')'  reduce 70
	','  reduce 70
	'}'  reduce 70


state 134
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr '<' expr .  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 62
	TK_TO  reduce 62
	OPERATOR_LE  reduce 62
	OPERATOR_GE  reduce 62
	OPERATOR_EQ  reduce 62
	OPERATOR_NE  reduce 62
	OPERATOR_AND  reduce 62
	OPERATOR_OR  reduce 62
	TK_IDENTIFIER  reduce 62
	LIT_INTEGER  reduce 62
	LIT_REAL  reduce 62
	LIT_CHAR  reduce 62
	LIT_STRING  reduce 62
	'<'  reduce 62
	'>'  reduce 62
	'#'  reduce 62
	'&'  reduce 62
	'!'  reduce 62
	';'  reduce 62
	']'  reduce 62
	'('  reduce 62
	')'  reduce 62
	','  reduce 62
	'}'  reduce 62


state 135
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr '>' expr .  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 63
	TK_TO  reduce 63
	OPERATOR_LE  reduce 63
	OPERATOR_GE  reduce 63
	OPERATOR_EQ  reduce 63
	OPERATOR_NE  reduce 63
	OPERATOR_AND  reduce 63
	OPERATOR_OR  reduce 63
	TK_IDENTIFIER  reduce 63
	LIT_INTEGER  reduce 63
	LIT_REAL  reduce 63
	LIT_CHAR  reduce 63
	LIT_STRING  reduce 63
	'<'  reduce 63
	'>'  reduce 63
	'#'  reduce 63
	'&'  reduce 63
	'!'  reduce 63
	';'  reduce 63
	']'  reduce 63
	'('  reduce 63
	')'  reduce 63
	','  reduce 63
	'}'  reduce 63


state 136
	expr : expr . '+' expr  (58)
	expr : expr '+' expr .  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 58
	TK_TO  reduce 58
	OPERATOR_LE  reduce 58
	OPERATOR_GE  reduce 58
	OPERATOR_EQ  reduce 58
	OPERATOR_NE  reduce 58
	OPERATOR_AND  reduce 58
	OPERATOR_OR  reduce 58
	TK_IDENTIFIER  reduce 58
	LIT_INTEGER  reduce 58
	LIT_REAL  reduce 58
	LIT_CHAR  reduce 58
	LIT_STRING  reduce 58
	'<'  reduce 58
	'>'  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'#'  reduce 58
	'&'  reduce 58
	'!'  reduce 58
	';'  reduce 58
	']'  reduce 58
	'('  reduce 58
	')'  reduce 58
	','  reduce 58
	'}'  reduce 58


state 137
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr '-' expr .  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 59
	TK_TO  reduce 59
	OPERATOR_LE  reduce 59
	OPERATOR_GE  reduce 59
	OPERATOR_EQ  reduce 59
	OPERATOR_NE  reduce 59
	OPERATOR_AND  reduce 59
	OPERATOR_OR  reduce 59
	TK_IDENTIFIER  reduce 59
	LIT_INTEGER  reduce 59
	LIT_REAL  reduce 59
	LIT_CHAR  reduce 59
	LIT_STRING  reduce 59
	'<'  reduce 59
	'>'  reduce 59
	'+'  reduce 59
	'-'  reduce 59
	'#'  reduce 59
	'&'  reduce 59
	'!'  reduce 59
	';'  reduce 59
	']'  reduce 59
	'('  reduce 59
	')'  reduce 59
	','  reduce 59
	'}'  reduce 59


state 138
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr '*' expr .  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	.  reduce 60


state 139
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr '/' expr .  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	.  reduce 61


state 140
	attribution : TK_IDENTIFIER '[' expr ']' . '=' expr  (43)

	'='  shift 147
	.  error


state 141
	while : TK_WHILE '(' expr ')' command .  (81)

	.  reduce 81


state 142
	if : TK_IF '(' expr ')' TK_THEN . command  (79)
	if : TK_IF '(' expr ')' TK_THEN . command TK_ELSE command  (80)
	command : .  (41)

	TK_WHILE  shift 56
	TK_IF  shift 57
	TK_FOR  shift 58
	TK_READ  shift 59
	TK_RETURN  shift 60
	TK_PRINT  shift 61
	TK_IDENTIFIER  shift 62
	'{'  shift 51
	TK_ELSE  reduce 41
	';'  reduce 41
	'}'  reduce 41

	block  goto 63
	command  goto 148
	attribution  goto 66
	read  goto 67
	print  goto 68
	return  goto 69
	control  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 143
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)
	for : TK_FOR '(' TK_IDENTIFIER '=' expr . TK_TO expr ')' command  (82)

	TK_TO  shift 149
	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	.  error


state 144
	expr : TK_IDENTIFIER '[' expr ']' .  (52)

	.  reduce 52


state 145
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)
	call_param_list : expr .  (74)
	call_param_list : expr . ',' call_param_list  (75)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	','  shift 150
	')'  reduce 74


state 146
	func_call : TK_IDENTIFIER '(' $$4 call_param_list . ')'  (72)

	')'  shift 151
	.  error


state 147
	attribution : TK_IDENTIFIER '[' expr ']' '=' . expr  (43)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 152
	func_call  goto 86


148: shift/reduce conflict (shift 153, reduce 79) on TK_ELSE
state 148
	if : TK_IF '(' expr ')' TK_THEN command .  (79)
	if : TK_IF '(' expr ')' TK_THEN command . TK_ELSE command  (80)

	TK_ELSE  shift 153
	';'  reduce 79
	'}'  reduce 79


state 149
	for : TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO . expr ')' command  (82)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 154
	func_call  goto 86


state 150
	call_param_list : expr ',' . call_param_list  (75)

	TK_IDENTIFIER  shift 79
	LIT_INTEGER  shift 43
	LIT_REAL  shift 44
	LIT_CHAR  shift 45
	'#'  shift 80
	'&'  shift 81
	'!'  shift 82
	'('  shift 83
	.  error

	lit  goto 84
	expr  goto 145
	func_call  goto 86
	call_param_list  goto 155


state 151
	func_call : TK_IDENTIFIER '(' $$4 call_param_list ')' .  (72)

	.  reduce 72


state 152
	attribution : TK_IDENTIFIER '[' expr ']' '=' expr .  (43)
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	TK_ELSE  reduce 43
	';'  reduce 43
	'}'  reduce 43


state 153
	if : TK_IF '(' expr ')' TK_THEN command TK_ELSE . command  (80)
	command : .  (41)

	TK_WHILE  shift 56
	TK_IF  shift 57
	TK_FOR  shift 58
	TK_READ  shift 59
	TK_RETURN  shift 60
	TK_PRINT  shift 61
	TK_IDENTIFIER  shift 62
	'{'  shift 51
	TK_ELSE  reduce 41
	';'  reduce 41
	'}'  reduce 41

	block  goto 63
	command  goto 156
	attribution  goto 66
	read  goto 67
	print  goto 68
	return  goto 69
	control  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 154
	expr : expr . '+' expr  (58)
	expr : expr . '-' expr  (59)
	expr : expr . '*' expr  (60)
	expr : expr . '/' expr  (61)
	expr : expr . '<' expr  (62)
	expr : expr . '>' expr  (63)
	expr : expr . OPERATOR_LE expr  (65)
	expr : expr . OPERATOR_GE expr  (66)
	expr : expr . OPERATOR_EQ expr  (67)
	expr : expr . OPERATOR_NE expr  (68)
	expr : expr . OPERATOR_AND expr  (69)
	expr : expr . OPERATOR_OR expr  (70)
	for : TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr . ')' command  (82)

	OPERATOR_LE  shift 104
	OPERATOR_GE  shift 105
	OPERATOR_EQ  shift 106
	OPERATOR_NE  shift 107
	OPERATOR_AND  shift 108
	OPERATOR_OR  shift 109
	'<'  shift 110
	'>'  shift 111
	'+'  shift 112
	'-'  shift 113
	'*'  shift 114
	'/'  shift 115
	')'  shift 157
	.  error


state 155
	call_param_list : expr ',' call_param_list .  (75)

	.  reduce 75


state 156
	if : TK_IF '(' expr ')' TK_THEN command TK_ELSE command .  (80)

	.  reduce 80


state 157
	for : TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr ')' . command  (82)
	command : .  (41)

	TK_WHILE  shift 56
	TK_IF  shift 57
	TK_FOR  shift 58
	TK_READ  shift 59
	TK_RETURN  shift 60
	TK_PRINT  shift 61
	TK_IDENTIFIER  shift 62
	'{'  shift 51
	TK_ELSE  reduce 41
	';'  reduce 41
	'}'  reduce 41

	block  goto 63
	command  goto 158
	attribution  goto 66
	read  goto 67
	print  goto 68
	return  goto 69
	control  goto 70
	if  goto 71
	while  goto 72
	for  goto 73


state 158
	for : TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr ')' command .  (82)

	.  reduce 82


State 79 contains 1 shift/reduce conflict.
State 148 contains 1 shift/reduce conflict.


45 terminals, 30 nonterminals
83 grammar rules, 159 states
