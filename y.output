Terminals unused in grammar

   TOKEN_ERROR


State 80 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: code

    2 code: var code
    3     | func code
    4     | error
    5     | %empty

    6 var: var_type TK_IDENTIFIER '=' LIT_INTEGER ';'
    7    | var_type TK_IDENTIFIER '=' LIT_REAL ';'
    8    | var_type TK_IDENTIFIER '=' LIT_CHAR ';'
    9    | var_type '#' TK_IDENTIFIER '=' LIT_CHAR ';'
   10    | var_type '#' TK_IDENTIFIER '=' LIT_REAL ';'
   11    | var_type '#' TK_IDENTIFIER '=' LIT_INTEGER ';'
   12    | var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ';'
   13    | var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list ';'

   14 var_type: TK_CHAR
   15         | TK_FLOAT
   16         | TK_INT

   17 lit: LIT_INTEGER
   18    | LIT_REAL
   19    | LIT_CHAR

   20 lit_list: lit lit_list
   21         | %empty

   22 $@1: %empty

   23 func: var_type TK_IDENTIFIER '(' $@1 param_list ')' block

   24 param: var_type TK_IDENTIFIER
   25      | var_type '#' TK_IDENTIFIER

   26 $@2: %empty

   27 param_list: param $@2 aux_param_list
   28           | %empty

   29 $@3: %empty

   30 aux_param_list: ',' param $@3 aux_param_list
   31               | %empty

   32 block: '{' command_list '}'

   33 command_list: command ';' command_list
   34             | command

   35 command: attribution
   36        | read
   37        | print
   38        | return
   39        | block
   40        | control
   41        | %empty

   42 attribution: TK_IDENTIFIER '=' expr
   43            | TK_IDENTIFIER '[' expr ']' '=' expr

   44 read: TK_READ TK_IDENTIFIER

   45 print: TK_PRINT print_list

   46 print_list: LIT_STRING
   47           | expr
   48           | LIT_STRING print_list
   49           | expr print_list

   50 return: TK_RETURN expr

   51 expr: TK_IDENTIFIER
   52     | TK_IDENTIFIER '[' expr ']'
   53     | lit
   54     | func_call
   55     | '#' TK_IDENTIFIER
   56     | '&' TK_IDENTIFIER
   57     | '(' expr ')'
   58     | expr '+' expr
   59     | expr '-' expr
   60     | expr '*' expr
   61     | expr '/' expr
   62     | expr '<' expr
   63     | expr '>' expr
   64     | '!' expr
   65     | expr OPERATOR_LE expr
   66     | expr OPERATOR_GE expr
   67     | expr OPERATOR_EQ expr
   68     | expr OPERATOR_NE expr
   69     | expr OPERATOR_AND expr
   70     | expr OPERATOR_OR expr

   71 $@4: %empty

   72 func_call: TK_IDENTIFIER '(' $@4 call_param_list ')'
   73          | TK_IDENTIFIER '(' ')'

   74 call_param_list: expr
   75                | expr ',' call_param_list

   76 control: if
   77        | while
   78        | for

   79 if: TK_IF '(' expr ')' TK_THEN command
   80   | TK_IF '(' expr ')' TK_THEN command TK_ELSE command

   81 while: TK_WHILE '(' expr ')' command

   82 for: TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr ')' command


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'#' (35) 9 10 11 25 55
'&' (38) 56
'(' (40) 23 57 72 73 79 80 81 82
')' (41) 23 57 72 73 79 80 81 82
'*' (42) 60
'+' (43) 58
',' (44) 30 75
'-' (45) 59
'/' (47) 61
':' (58) 13
';' (59) 6 7 8 9 10 11 12 13 33
'<' (60) 62
'=' (61) 6 7 8 9 10 11 42 43 82
'>' (62) 63
'[' (91) 12 13 43 52
']' (93) 12 13 43 52
'{' (123) 32
'}' (125) 32
error (256) 4
TK_WHILE (258) 81
TK_CHAR (259) 14
TK_INT (260) 16
TK_FLOAT (261) 15
TK_IF (262) 79 80
TK_THEN (263) 79 80
TK_ELSE (264) 80
TK_FOR (265) 82
TK_TO (266) 82
TK_READ (267) 44
TK_RETURN (268) 50
TK_PRINT (269) 45
OPERATOR_LE (270) 65
OPERATOR_GE (271) 66
OPERATOR_EQ (272) 67
OPERATOR_NE (273) 68
OPERATOR_AND (274) 69
OPERATOR_OR (275) 70
TK_IDENTIFIER (276) 6 7 8 9 10 11 12 13 23 24 25 42 43 44 51 52 55
    56 72 73 82
LIT_INTEGER (277) 6 11 12 13 17
LIT_REAL (278) 7 10 18
LIT_CHAR (279) 8 9 19
LIT_STRING (280) 46 48
TOKEN_ERROR (281)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
code (48)
    on left: 2 3 4 5, on right: 1 2 3
var (49)
    on left: 6 7 8 9 10 11 12 13, on right: 2
var_type (50)
    on left: 14 15 16, on right: 6 7 8 9 10 11 12 13 23 24 25
lit (51)
    on left: 17 18 19, on right: 20 53
lit_list (52)
    on left: 20 21, on right: 13 20
func (53)
    on left: 23, on right: 3
$@1 (54)
    on left: 22, on right: 23
param (55)
    on left: 24 25, on right: 27 30
param_list (56)
    on left: 27 28, on right: 23
$@2 (57)
    on left: 26, on right: 27
aux_param_list (58)
    on left: 30 31, on right: 27 30
$@3 (59)
    on left: 29, on right: 30
block (60)
    on left: 32, on right: 23 39
command_list (61)
    on left: 33 34, on right: 32 33
command (62)
    on left: 35 36 37 38 39 40 41, on right: 33 34 79 80 81 82
attribution (63)
    on left: 42 43, on right: 35
read (64)
    on left: 44, on right: 36
print (65)
    on left: 45, on right: 37
print_list (66)
    on left: 46 47 48 49, on right: 45 48 49
return (67)
    on left: 50, on right: 38
expr (68)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70, on right: 42 43 47 49 50 52 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 74 75 79 80 81 82
func_call (69)
    on left: 72 73, on right: 54
$@4 (70)
    on left: 71, on right: 72
call_param_list (71)
    on left: 74 75, on right: 72 75
control (72)
    on left: 76 77 78, on right: 40
if (73)
    on left: 79 80, on right: 76
while (74)
    on left: 81, on right: 77
for (75)
    on left: 82, on right: 78


State 0

    0 $accept: . program $end

    error     shift, and go to state 1
    TK_CHAR   shift, and go to state 2
    TK_INT    shift, and go to state 3
    TK_FLOAT  shift, and go to state 4

    $end  reduce using rule 5 (code)

    program   go to state 5
    code      go to state 6
    var       go to state 7
    var_type  go to state 8
    func      go to state 9


State 1

    4 code: error .

    $default  reduce using rule 4 (code)


State 2

   14 var_type: TK_CHAR .

    $default  reduce using rule 14 (var_type)


State 3

   16 var_type: TK_INT .

    $default  reduce using rule 16 (var_type)


State 4

   15 var_type: TK_FLOAT .

    $default  reduce using rule 15 (var_type)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 10


State 6

    1 program: code .

    $default  reduce using rule 1 (program)


State 7

    2 code: var . code

    error     shift, and go to state 1
    TK_CHAR   shift, and go to state 2
    TK_INT    shift, and go to state 3
    TK_FLOAT  shift, and go to state 4

    $end  reduce using rule 5 (code)

    code      go to state 11
    var       go to state 7
    var_type  go to state 8
    func      go to state 9


State 8

    6 var: var_type . TK_IDENTIFIER '=' LIT_INTEGER ';'
    7    | var_type . TK_IDENTIFIER '=' LIT_REAL ';'
    8    | var_type . TK_IDENTIFIER '=' LIT_CHAR ';'
    9    | var_type . '#' TK_IDENTIFIER '=' LIT_CHAR ';'
   10    | var_type . '#' TK_IDENTIFIER '=' LIT_REAL ';'
   11    | var_type . '#' TK_IDENTIFIER '=' LIT_INTEGER ';'
   12    | var_type . TK_IDENTIFIER '[' LIT_INTEGER ']' ';'
   13    | var_type . TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list ';'
   23 func: var_type . TK_IDENTIFIER '(' $@1 param_list ')' block

    TK_IDENTIFIER  shift, and go to state 12
    '#'            shift, and go to state 13


State 9

    3 code: func . code

    error     shift, and go to state 1
    TK_CHAR   shift, and go to state 2
    TK_INT    shift, and go to state 3
    TK_FLOAT  shift, and go to state 4

    $end  reduce using rule 5 (code)

    code      go to state 14
    var       go to state 7
    var_type  go to state 8
    func      go to state 9


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 code: var code .

    $default  reduce using rule 2 (code)


State 12

    6 var: var_type TK_IDENTIFIER . '=' LIT_INTEGER ';'
    7    | var_type TK_IDENTIFIER . '=' LIT_REAL ';'
    8    | var_type TK_IDENTIFIER . '=' LIT_CHAR ';'
   12    | var_type TK_IDENTIFIER . '[' LIT_INTEGER ']' ';'
   13    | var_type TK_IDENTIFIER . '[' LIT_INTEGER ']' ':' lit_list ';'
   23 func: var_type TK_IDENTIFIER . '(' $@1 param_list ')' block

    '='  shift, and go to state 15
    '['  shift, and go to state 16
    '('  shift, and go to state 17


State 13

    9 var: var_type '#' . TK_IDENTIFIER '=' LIT_CHAR ';'
   10    | var_type '#' . TK_IDENTIFIER '=' LIT_REAL ';'
   11    | var_type '#' . TK_IDENTIFIER '=' LIT_INTEGER ';'

    TK_IDENTIFIER  shift, and go to state 18


State 14

    3 code: func code .

    $default  reduce using rule 3 (code)


State 15

    6 var: var_type TK_IDENTIFIER '=' . LIT_INTEGER ';'
    7    | var_type TK_IDENTIFIER '=' . LIT_REAL ';'
    8    | var_type TK_IDENTIFIER '=' . LIT_CHAR ';'

    LIT_INTEGER  shift, and go to state 19
    LIT_REAL     shift, and go to state 20
    LIT_CHAR     shift, and go to state 21


State 16

   12 var: var_type TK_IDENTIFIER '[' . LIT_INTEGER ']' ';'
   13    | var_type TK_IDENTIFIER '[' . LIT_INTEGER ']' ':' lit_list ';'

    LIT_INTEGER  shift, and go to state 22


State 17

   23 func: var_type TK_IDENTIFIER '(' . $@1 param_list ')' block

    $default  reduce using rule 22 ($@1)

    $@1  go to state 23


State 18

    9 var: var_type '#' TK_IDENTIFIER . '=' LIT_CHAR ';'
   10    | var_type '#' TK_IDENTIFIER . '=' LIT_REAL ';'
   11    | var_type '#' TK_IDENTIFIER . '=' LIT_INTEGER ';'

    '='  shift, and go to state 24


State 19

    6 var: var_type TK_IDENTIFIER '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 25


State 20

    7 var: var_type TK_IDENTIFIER '=' LIT_REAL . ';'

    ';'  shift, and go to state 26


State 21

    8 var: var_type TK_IDENTIFIER '=' LIT_CHAR . ';'

    ';'  shift, and go to state 27


State 22

   12 var: var_type TK_IDENTIFIER '[' LIT_INTEGER . ']' ';'
   13    | var_type TK_IDENTIFIER '[' LIT_INTEGER . ']' ':' lit_list ';'

    ']'  shift, and go to state 28


State 23

   23 func: var_type TK_IDENTIFIER '(' $@1 . param_list ')' block

    TK_CHAR   shift, and go to state 2
    TK_INT    shift, and go to state 3
    TK_FLOAT  shift, and go to state 4

    $default  reduce using rule 28 (param_list)

    var_type    go to state 29
    param       go to state 30
    param_list  go to state 31


State 24

    9 var: var_type '#' TK_IDENTIFIER '=' . LIT_CHAR ';'
   10    | var_type '#' TK_IDENTIFIER '=' . LIT_REAL ';'
   11    | var_type '#' TK_IDENTIFIER '=' . LIT_INTEGER ';'

    LIT_INTEGER  shift, and go to state 32
    LIT_REAL     shift, and go to state 33
    LIT_CHAR     shift, and go to state 34


State 25

    6 var: var_type TK_IDENTIFIER '=' LIT_INTEGER ';' .

    $default  reduce using rule 6 (var)


State 26

    7 var: var_type TK_IDENTIFIER '=' LIT_REAL ';' .

    $default  reduce using rule 7 (var)


State 27

    8 var: var_type TK_IDENTIFIER '=' LIT_CHAR ';' .

    $default  reduce using rule 8 (var)


State 28

   12 var: var_type TK_IDENTIFIER '[' LIT_INTEGER ']' . ';'
   13    | var_type TK_IDENTIFIER '[' LIT_INTEGER ']' . ':' lit_list ';'

    ';'  shift, and go to state 35
    ':'  shift, and go to state 36


State 29

   24 param: var_type . TK_IDENTIFIER
   25      | var_type . '#' TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 37
    '#'            shift, and go to state 38


State 30

   27 param_list: param . $@2 aux_param_list

    $default  reduce using rule 26 ($@2)

    $@2  go to state 39


State 31

   23 func: var_type TK_IDENTIFIER '(' $@1 param_list . ')' block

    ')'  shift, and go to state 40


State 32

   11 var: var_type '#' TK_IDENTIFIER '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 41


State 33

   10 var: var_type '#' TK_IDENTIFIER '=' LIT_REAL . ';'

    ';'  shift, and go to state 42


State 34

    9 var: var_type '#' TK_IDENTIFIER '=' LIT_CHAR . ';'

    ';'  shift, and go to state 43


State 35

   12 var: var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ';' .

    $default  reduce using rule 12 (var)


State 36

   13 var: var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' . lit_list ';'

    LIT_INTEGER  shift, and go to state 44
    LIT_REAL     shift, and go to state 45
    LIT_CHAR     shift, and go to state 46

    $default  reduce using rule 21 (lit_list)

    lit       go to state 47
    lit_list  go to state 48


State 37

   24 param: var_type TK_IDENTIFIER .

    $default  reduce using rule 24 (param)


State 38

   25 param: var_type '#' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 49


State 39

   27 param_list: param $@2 . aux_param_list

    ','  shift, and go to state 50

    $default  reduce using rule 31 (aux_param_list)

    aux_param_list  go to state 51


State 40

   23 func: var_type TK_IDENTIFIER '(' $@1 param_list ')' . block

    '{'  shift, and go to state 52

    block  go to state 53


State 41

   11 var: var_type '#' TK_IDENTIFIER '=' LIT_INTEGER ';' .

    $default  reduce using rule 11 (var)


State 42

   10 var: var_type '#' TK_IDENTIFIER '=' LIT_REAL ';' .

    $default  reduce using rule 10 (var)


State 43

    9 var: var_type '#' TK_IDENTIFIER '=' LIT_CHAR ';' .

    $default  reduce using rule 9 (var)


State 44

   17 lit: LIT_INTEGER .

    $default  reduce using rule 17 (lit)


State 45

   18 lit: LIT_REAL .

    $default  reduce using rule 18 (lit)


State 46

   19 lit: LIT_CHAR .

    $default  reduce using rule 19 (lit)


State 47

   20 lit_list: lit . lit_list

    LIT_INTEGER  shift, and go to state 44
    LIT_REAL     shift, and go to state 45
    LIT_CHAR     shift, and go to state 46

    $default  reduce using rule 21 (lit_list)

    lit       go to state 47
    lit_list  go to state 54


State 48

   13 var: var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list . ';'

    ';'  shift, and go to state 55


State 49

   25 param: var_type '#' TK_IDENTIFIER .

    $default  reduce using rule 25 (param)


State 50

   30 aux_param_list: ',' . param $@3 aux_param_list

    TK_CHAR   shift, and go to state 2
    TK_INT    shift, and go to state 3
    TK_FLOAT  shift, and go to state 4

    var_type  go to state 29
    param     go to state 56


State 51

   27 param_list: param $@2 aux_param_list .

    $default  reduce using rule 27 (param_list)


State 52

   32 block: '{' . command_list '}'

    TK_WHILE       shift, and go to state 57
    TK_IF          shift, and go to state 58
    TK_FOR         shift, and go to state 59
    TK_READ        shift, and go to state 60
    TK_RETURN      shift, and go to state 61
    TK_PRINT       shift, and go to state 62
    TK_IDENTIFIER  shift, and go to state 63
    '{'            shift, and go to state 52

    $default  reduce using rule 41 (command)

    block         go to state 64
    command_list  go to state 65
    command       go to state 66
    attribution   go to state 67
    read          go to state 68
    print         go to state 69
    return        go to state 70
    control       go to state 71
    if            go to state 72
    while         go to state 73
    for           go to state 74


State 53

   23 func: var_type TK_IDENTIFIER '(' $@1 param_list ')' block .

    $default  reduce using rule 23 (func)


State 54

   20 lit_list: lit lit_list .

    $default  reduce using rule 20 (lit_list)


State 55

   13 var: var_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' lit_list ';' .

    $default  reduce using rule 13 (var)


State 56

   30 aux_param_list: ',' param . $@3 aux_param_list

    $default  reduce using rule 29 ($@3)

    $@3  go to state 75


State 57

   81 while: TK_WHILE . '(' expr ')' command

    '('  shift, and go to state 76


State 58

   79 if: TK_IF . '(' expr ')' TK_THEN command
   80   | TK_IF . '(' expr ')' TK_THEN command TK_ELSE command

    '('  shift, and go to state 77


State 59

   82 for: TK_FOR . '(' TK_IDENTIFIER '=' expr TK_TO expr ')' command

    '('  shift, and go to state 78


State 60

   44 read: TK_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 79


State 61

   50 return: TK_RETURN . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 86
    func_call  go to state 87


State 62

   45 print: TK_PRINT . print_list

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    LIT_STRING     shift, and go to state 88
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit         go to state 85
    print_list  go to state 89
    expr        go to state 90
    func_call   go to state 87


State 63

   42 attribution: TK_IDENTIFIER . '=' expr
   43            | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 91
    '['  shift, and go to state 92


State 64

   39 command: block .

    $default  reduce using rule 39 (command)


State 65

   32 block: '{' command_list . '}'

    '}'  shift, and go to state 93


State 66

   33 command_list: command . ';' command_list
   34             | command .

    ';'  shift, and go to state 94

    $default  reduce using rule 34 (command_list)


State 67

   35 command: attribution .

    $default  reduce using rule 35 (command)


State 68

   36 command: read .

    $default  reduce using rule 36 (command)


State 69

   37 command: print .

    $default  reduce using rule 37 (command)


State 70

   38 command: return .

    $default  reduce using rule 38 (command)


State 71

   40 command: control .

    $default  reduce using rule 40 (command)


State 72

   76 control: if .

    $default  reduce using rule 76 (control)


State 73

   77 control: while .

    $default  reduce using rule 77 (control)


State 74

   78 control: for .

    $default  reduce using rule 78 (control)


State 75

   30 aux_param_list: ',' param $@3 . aux_param_list

    ','  shift, and go to state 50

    $default  reduce using rule 31 (aux_param_list)

    aux_param_list  go to state 95


State 76

   81 while: TK_WHILE '(' . expr ')' command

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 96
    func_call  go to state 87


State 77

   79 if: TK_IF '(' . expr ')' TK_THEN command
   80   | TK_IF '(' . expr ')' TK_THEN command TK_ELSE command

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 97
    func_call  go to state 87


State 78

   82 for: TK_FOR '(' . TK_IDENTIFIER '=' expr TK_TO expr ')' command

    TK_IDENTIFIER  shift, and go to state 98


State 79

   44 read: TK_READ TK_IDENTIFIER .

    $default  reduce using rule 44 (read)


State 80

   51 expr: TK_IDENTIFIER .
   52     | TK_IDENTIFIER . '[' expr ']'
   72 func_call: TK_IDENTIFIER . '(' $@4 call_param_list ')'
   73          | TK_IDENTIFIER . '(' ')'

    '['  shift, and go to state 99
    '('  shift, and go to state 100

    '('       [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


State 81

   55 expr: '#' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 101


State 82

   56 expr: '&' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 102


State 83

   64 expr: '!' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 103
    func_call  go to state 87


State 84

   57 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 104
    func_call  go to state 87


State 85

   53 expr: lit .

    $default  reduce using rule 53 (expr)


State 86

   50 return: TK_RETURN expr .
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116

    $default  reduce using rule 50 (return)


State 87

   54 expr: func_call .

    $default  reduce using rule 54 (expr)


State 88

   46 print_list: LIT_STRING .
   48           | LIT_STRING . print_list

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    LIT_STRING     shift, and go to state 88
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    $default  reduce using rule 46 (print_list)

    lit         go to state 85
    print_list  go to state 117
    expr        go to state 90
    func_call   go to state 87


State 89

   45 print: TK_PRINT print_list .

    $default  reduce using rule 45 (print)


State 90

   47 print_list: expr .
   49           | expr . print_list
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE    shift, and go to state 105
    OPERATOR_GE    shift, and go to state 106
    OPERATOR_EQ    shift, and go to state 107
    OPERATOR_NE    shift, and go to state 108
    OPERATOR_AND   shift, and go to state 109
    OPERATOR_OR    shift, and go to state 110
    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    LIT_STRING     shift, and go to state 88
    '<'            shift, and go to state 111
    '>'            shift, and go to state 112
    '+'            shift, and go to state 113
    '-'            shift, and go to state 114
    '*'            shift, and go to state 115
    '/'            shift, and go to state 116
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    $default  reduce using rule 47 (print_list)

    lit         go to state 85
    print_list  go to state 118
    expr        go to state 90
    func_call   go to state 87


State 91

   42 attribution: TK_IDENTIFIER '=' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 119
    func_call  go to state 87


State 92

   43 attribution: TK_IDENTIFIER '[' . expr ']' '=' expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 120
    func_call  go to state 87


State 93

   32 block: '{' command_list '}' .

    $default  reduce using rule 32 (block)


State 94

   33 command_list: command ';' . command_list

    TK_WHILE       shift, and go to state 57
    TK_IF          shift, and go to state 58
    TK_FOR         shift, and go to state 59
    TK_READ        shift, and go to state 60
    TK_RETURN      shift, and go to state 61
    TK_PRINT       shift, and go to state 62
    TK_IDENTIFIER  shift, and go to state 63
    '{'            shift, and go to state 52

    $default  reduce using rule 41 (command)

    block         go to state 64
    command_list  go to state 121
    command       go to state 66
    attribution   go to state 67
    read          go to state 68
    print         go to state 69
    return        go to state 70
    control       go to state 71
    if            go to state 72
    while         go to state 73
    for           go to state 74


State 95

   30 aux_param_list: ',' param $@3 aux_param_list .

    $default  reduce using rule 30 (aux_param_list)


State 96

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr
   81 while: TK_WHILE '(' expr . ')' command

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116
    ')'           shift, and go to state 122


State 97

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr
   79 if: TK_IF '(' expr . ')' TK_THEN command
   80   | TK_IF '(' expr . ')' TK_THEN command TK_ELSE command

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116
    ')'           shift, and go to state 123


State 98

   82 for: TK_FOR '(' TK_IDENTIFIER . '=' expr TK_TO expr ')' command

    '='  shift, and go to state 124


State 99

   52 expr: TK_IDENTIFIER '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 125
    func_call  go to state 87


State 100

   72 func_call: TK_IDENTIFIER '(' . $@4 call_param_list ')'
   73          | TK_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 126

    $default  reduce using rule 71 ($@4)

    $@4  go to state 127


State 101

   55 expr: '#' TK_IDENTIFIER .

    $default  reduce using rule 55 (expr)


State 102

   56 expr: '&' TK_IDENTIFIER .

    $default  reduce using rule 56 (expr)


State 103

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   64     | '!' expr .
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    $default  reduce using rule 64 (expr)


State 104

   57 expr: '(' expr . ')'
   58     | expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116
    ')'           shift, and go to state 128


State 105

   65 expr: expr OPERATOR_LE . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 129
    func_call  go to state 87


State 106

   66 expr: expr OPERATOR_GE . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 130
    func_call  go to state 87


State 107

   67 expr: expr OPERATOR_EQ . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 131
    func_call  go to state 87


State 108

   68 expr: expr OPERATOR_NE . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 132
    func_call  go to state 87


State 109

   69 expr: expr OPERATOR_AND . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 133
    func_call  go to state 87


State 110

   70 expr: expr OPERATOR_OR . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 134
    func_call  go to state 87


State 111

   62 expr: expr '<' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 135
    func_call  go to state 87


State 112

   63 expr: expr '>' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 136
    func_call  go to state 87


State 113

   58 expr: expr '+' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 137
    func_call  go to state 87


State 114

   59 expr: expr '-' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 138
    func_call  go to state 87


State 115

   60 expr: expr '*' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 139
    func_call  go to state 87


State 116

   61 expr: expr '/' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 140
    func_call  go to state 87


State 117

   48 print_list: LIT_STRING print_list .

    $default  reduce using rule 48 (print_list)


State 118

   49 print_list: expr print_list .

    $default  reduce using rule 49 (print_list)


State 119

   42 attribution: TK_IDENTIFIER '=' expr .
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116

    $default  reduce using rule 42 (attribution)


State 120

   43 attribution: TK_IDENTIFIER '[' expr . ']' '=' expr
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116
    ']'           shift, and go to state 141


State 121

   33 command_list: command ';' command_list .

    $default  reduce using rule 33 (command_list)


State 122

   81 while: TK_WHILE '(' expr ')' . command

    TK_WHILE       shift, and go to state 57
    TK_IF          shift, and go to state 58
    TK_FOR         shift, and go to state 59
    TK_READ        shift, and go to state 60
    TK_RETURN      shift, and go to state 61
    TK_PRINT       shift, and go to state 62
    TK_IDENTIFIER  shift, and go to state 63
    '{'            shift, and go to state 52

    $default  reduce using rule 41 (command)

    block        go to state 64
    command      go to state 142
    attribution  go to state 67
    read         go to state 68
    print        go to state 69
    return       go to state 70
    control      go to state 71
    if           go to state 72
    while        go to state 73
    for          go to state 74


State 123

   79 if: TK_IF '(' expr ')' . TK_THEN command
   80   | TK_IF '(' expr ')' . TK_THEN command TK_ELSE command

    TK_THEN  shift, and go to state 143


State 124

   82 for: TK_FOR '(' TK_IDENTIFIER '=' . expr TK_TO expr ')' command

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 144
    func_call  go to state 87


State 125

   52 expr: TK_IDENTIFIER '[' expr . ']'
   58     | expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116
    ']'           shift, and go to state 145


State 126

   73 func_call: TK_IDENTIFIER '(' ')' .

    $default  reduce using rule 73 (func_call)


State 127

   72 func_call: TK_IDENTIFIER '(' $@4 . call_param_list ')'

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit              go to state 85
    expr             go to state 146
    func_call        go to state 87
    call_param_list  go to state 147


State 128

   57 expr: '(' expr ')' .

    $default  reduce using rule 57 (expr)


State 129

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   65     | expr OPERATOR_LE expr .
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 65 (expr)


State 130

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   66     | expr OPERATOR_GE expr .
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 66 (expr)


State 131

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   67     | expr OPERATOR_EQ expr .
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 67 (expr)


State 132

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   68     | expr OPERATOR_NE expr .
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 68 (expr)


State 133

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   69     | expr OPERATOR_AND expr .
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE  shift, and go to state 105
    OPERATOR_GE  shift, and go to state 106
    OPERATOR_EQ  shift, and go to state 107
    OPERATOR_NE  shift, and go to state 108
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112
    '+'          shift, and go to state 113
    '-'          shift, and go to state 114
    '*'          shift, and go to state 115
    '/'          shift, and go to state 116

    $default  reduce using rule 69 (expr)


State 134

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr
   70     | expr OPERATOR_OR expr .

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116

    $default  reduce using rule 70 (expr)


State 135

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   62     | expr '<' expr .
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 62 (expr)


State 136

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   63     | expr '>' expr .
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 63 (expr)


State 137

   58 expr: expr . '+' expr
   58     | expr '+' expr .
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 58 (expr)


State 138

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   59     | expr '-' expr .
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 59 (expr)


State 139

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   60     | expr '*' expr .
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    $default  reduce using rule 60 (expr)


State 140

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   61     | expr '/' expr .
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    $default  reduce using rule 61 (expr)


State 141

   43 attribution: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 148


State 142

   81 while: TK_WHILE '(' expr ')' command .

    $default  reduce using rule 81 (while)


State 143

   79 if: TK_IF '(' expr ')' TK_THEN . command
   80   | TK_IF '(' expr ')' TK_THEN . command TK_ELSE command

    TK_WHILE       shift, and go to state 57
    TK_IF          shift, and go to state 58
    TK_FOR         shift, and go to state 59
    TK_READ        shift, and go to state 60
    TK_RETURN      shift, and go to state 61
    TK_PRINT       shift, and go to state 62
    TK_IDENTIFIER  shift, and go to state 63
    '{'            shift, and go to state 52

    $default  reduce using rule 41 (command)

    block        go to state 64
    command      go to state 149
    attribution  go to state 67
    read         go to state 68
    print        go to state 69
    return       go to state 70
    control      go to state 71
    if           go to state 72
    while        go to state 73
    for          go to state 74


State 144

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr
   82 for: TK_FOR '(' TK_IDENTIFIER '=' expr . TK_TO expr ')' command

    TK_TO         shift, and go to state 150
    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116


State 145

   52 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 52 (expr)


State 146

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr
   74 call_param_list: expr .
   75                | expr . ',' call_param_list

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116
    ','           shift, and go to state 151

    $default  reduce using rule 74 (call_param_list)


State 147

   72 func_call: TK_IDENTIFIER '(' $@4 call_param_list . ')'

    ')'  shift, and go to state 152


State 148

   43 attribution: TK_IDENTIFIER '[' expr ']' '=' . expr

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 153
    func_call  go to state 87


State 149

   79 if: TK_IF '(' expr ')' TK_THEN command .
   80   | TK_IF '(' expr ')' TK_THEN command . TK_ELSE command

    TK_ELSE  shift, and go to state 154

    TK_ELSE   [reduce using rule 79 (if)]
    $default  reduce using rule 79 (if)


State 150

   82 for: TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO . expr ')' command

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit        go to state 85
    expr       go to state 155
    func_call  go to state 87


State 151

   75 call_param_list: expr ',' . call_param_list

    TK_IDENTIFIER  shift, and go to state 80
    LIT_INTEGER    shift, and go to state 44
    LIT_REAL       shift, and go to state 45
    LIT_CHAR       shift, and go to state 46
    '#'            shift, and go to state 81
    '&'            shift, and go to state 82
    '!'            shift, and go to state 83
    '('            shift, and go to state 84

    lit              go to state 85
    expr             go to state 146
    func_call        go to state 87
    call_param_list  go to state 156


State 152

   72 func_call: TK_IDENTIFIER '(' $@4 call_param_list ')' .

    $default  reduce using rule 72 (func_call)


State 153

   43 attribution: TK_IDENTIFIER '[' expr ']' '=' expr .
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116

    $default  reduce using rule 43 (attribution)


State 154

   80 if: TK_IF '(' expr ')' TK_THEN command TK_ELSE . command

    TK_WHILE       shift, and go to state 57
    TK_IF          shift, and go to state 58
    TK_FOR         shift, and go to state 59
    TK_READ        shift, and go to state 60
    TK_RETURN      shift, and go to state 61
    TK_PRINT       shift, and go to state 62
    TK_IDENTIFIER  shift, and go to state 63
    '{'            shift, and go to state 52

    $default  reduce using rule 41 (command)

    block        go to state 64
    command      go to state 157
    attribution  go to state 67
    read         go to state 68
    print        go to state 69
    return       go to state 70
    control      go to state 71
    if           go to state 72
    while        go to state 73
    for          go to state 74


State 155

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   65     | expr . OPERATOR_LE expr
   66     | expr . OPERATOR_GE expr
   67     | expr . OPERATOR_EQ expr
   68     | expr . OPERATOR_NE expr
   69     | expr . OPERATOR_AND expr
   70     | expr . OPERATOR_OR expr
   82 for: TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr . ')' command

    OPERATOR_LE   shift, and go to state 105
    OPERATOR_GE   shift, and go to state 106
    OPERATOR_EQ   shift, and go to state 107
    OPERATOR_NE   shift, and go to state 108
    OPERATOR_AND  shift, and go to state 109
    OPERATOR_OR   shift, and go to state 110
    '<'           shift, and go to state 111
    '>'           shift, and go to state 112
    '+'           shift, and go to state 113
    '-'           shift, and go to state 114
    '*'           shift, and go to state 115
    '/'           shift, and go to state 116
    ')'           shift, and go to state 158


State 156

   75 call_param_list: expr ',' call_param_list .

    $default  reduce using rule 75 (call_param_list)


State 157

   80 if: TK_IF '(' expr ')' TK_THEN command TK_ELSE command .

    $default  reduce using rule 80 (if)


State 158

   82 for: TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr ')' . command

    TK_WHILE       shift, and go to state 57
    TK_IF          shift, and go to state 58
    TK_FOR         shift, and go to state 59
    TK_READ        shift, and go to state 60
    TK_RETURN      shift, and go to state 61
    TK_PRINT       shift, and go to state 62
    TK_IDENTIFIER  shift, and go to state 63
    '{'            shift, and go to state 52

    $default  reduce using rule 41 (command)

    block        go to state 64
    command      go to state 159
    attribution  go to state 67
    read         go to state 68
    print        go to state 69
    return       go to state 70
    control      go to state 71
    if           go to state 72
    while        go to state 73
    for          go to state 74


State 159

   82 for: TK_FOR '(' TK_IDENTIFIER '=' expr TK_TO expr ')' command .

    $default  reduce using rule 82 (for)
